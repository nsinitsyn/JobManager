//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.JobManagerReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobInputData", Namespace="http://schemas.datacontract.org/2004/07/JobManager.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class JobInputData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JobManager.Data.DTO.TransferData DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobWorkerClassNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobManager.Data.DTO.TransferData Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobWorkerClassName {
            get {
                return this.JobWorkerClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobWorkerClassNameField, value) != true)) {
                    this.JobWorkerClassNameField = value;
                    this.RaisePropertyChanged("JobWorkerClassName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobEventData", Namespace="http://schemas.datacontract.org/2004/07/JobManager.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class JobEventData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private JobManager.Data.DTO.TransferData TransferDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkerTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobManager.Data.DTO.TransferData TransferData {
            get {
                return this.TransferDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDataField, value) != true)) {
                    this.TransferDataField = value;
                    this.RaisePropertyChanged("TransferData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkerType {
            get {
                return this.WorkerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkerTypeField, value) != true)) {
                    this.WorkerTypeField = value;
                    this.RaisePropertyChanged("WorkerType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobManagerReference.IJobManagerService", CallbackContract=typeof(Client.JobManagerReference.IJobManagerServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IJobManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/RunJob", ReplyAction="http://tempuri.org/IJobManagerService/RunJobResponse")]
        JobManager.Data.DTO.TransferData RunJob(Client.JobManagerReference.JobInputData jobInputData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/RunJob", ReplyAction="http://tempuri.org/IJobManagerService/RunJobResponse")]
        System.Threading.Tasks.Task<JobManager.Data.DTO.TransferData> RunJobAsync(Client.JobManagerReference.JobInputData jobInputData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobManagerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJobManagerService/OnEvent")]
        void OnEvent(Client.JobManagerReference.JobEventData eventData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobManagerServiceChannel : Client.JobManagerReference.IJobManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobManagerServiceClient : System.ServiceModel.DuplexClientBase<Client.JobManagerReference.IJobManagerService>, Client.JobManagerReference.IJobManagerService {
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public JobManager.Data.DTO.TransferData RunJob(Client.JobManagerReference.JobInputData jobInputData) {
            return base.Channel.RunJob(jobInputData);
        }
        
        public System.Threading.Tasks.Task<JobManager.Data.DTO.TransferData> RunJobAsync(Client.JobManagerReference.JobInputData jobInputData) {
            return base.Channel.RunJobAsync(jobInputData);
        }
    }
}
