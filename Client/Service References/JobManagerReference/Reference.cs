//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.JobManagerReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobManagerReference.IJobManagerService", CallbackContract=typeof(Client.JobManagerReference.IJobManagerServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IJobManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/RunJob", ReplyAction="http://tempuri.org/IJobManagerService/RunJobResponse")]
        JobManager.Data.DTO.WorkerDto RunJob(JobManager.Data.DTO.JobDto job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/RunJob", ReplyAction="http://tempuri.org/IJobManagerService/RunJobResponse")]
        System.Threading.Tasks.Task<JobManager.Data.DTO.WorkerDto> RunJobAsync(JobManager.Data.DTO.JobDto job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/Signal", ReplyAction="http://tempuri.org/IJobManagerService/SignalResponse")]
        JobManager.Data.DTO.TransferData Signal(JobManager.Data.DTO.WorkerDto workerDto, JobManager.Data.DTO.TransferData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/Signal", ReplyAction="http://tempuri.org/IJobManagerService/SignalResponse")]
        System.Threading.Tasks.Task<JobManager.Data.DTO.TransferData> SignalAsync(JobManager.Data.DTO.WorkerDto workerDto, JobManager.Data.DTO.TransferData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/RegisterJob", ReplyAction="http://tempuri.org/IJobManagerService/RegisterJobResponse")]
        void RegisterJob(JobManager.Data.DTO.JobDto job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobManagerService/RegisterJob", ReplyAction="http://tempuri.org/IJobManagerService/RegisterJobResponse")]
        System.Threading.Tasks.Task RegisterJobAsync(JobManager.Data.DTO.JobDto job);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobManagerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJobManagerService/OnEvent")]
        void OnEvent(JobManager.Data.DTO.JobEventDto eventDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobManagerServiceChannel : Client.JobManagerReference.IJobManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobManagerServiceClient : System.ServiceModel.DuplexClientBase<Client.JobManagerReference.IJobManagerService>, Client.JobManagerReference.IJobManagerService {
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JobManagerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public JobManager.Data.DTO.WorkerDto RunJob(JobManager.Data.DTO.JobDto job) {
            return base.Channel.RunJob(job);
        }
        
        public System.Threading.Tasks.Task<JobManager.Data.DTO.WorkerDto> RunJobAsync(JobManager.Data.DTO.JobDto job) {
            return base.Channel.RunJobAsync(job);
        }
        
        public JobManager.Data.DTO.TransferData Signal(JobManager.Data.DTO.WorkerDto workerDto, JobManager.Data.DTO.TransferData data) {
            return base.Channel.Signal(workerDto, data);
        }
        
        public System.Threading.Tasks.Task<JobManager.Data.DTO.TransferData> SignalAsync(JobManager.Data.DTO.WorkerDto workerDto, JobManager.Data.DTO.TransferData data) {
            return base.Channel.SignalAsync(workerDto, data);
        }
        
        public void RegisterJob(JobManager.Data.DTO.JobDto job) {
            base.Channel.RegisterJob(job);
        }
        
        public System.Threading.Tasks.Task RegisterJobAsync(JobManager.Data.DTO.JobDto job) {
            return base.Channel.RegisterJobAsync(job);
        }
    }
}
