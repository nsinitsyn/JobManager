<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="quartz" type="System.Configuration.NameValueSectionHandler, System, Version=2.2.3.400,Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <connectionStrings>
    <!--<add name="JobManagerDatabase" providerName="System.Data.SqlClient" connectionString="Data Source=ADMIN-PC\SQLEXPRESS;Initial Catalog=JobManagerTesting;Trusted_Connection=True;" />-->
    <add name="JobManagerDatabase" providerName="System.Data.SqlClient" connectionString="Data Source=(local);Initial Catalog=JobManagerTesting;Trusted_Connection=True;" />
  </connectionStrings>
  <log4net>
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <param name="File" value="C://JobManagerTestLogs//CurrentLog.log" />
      <param name="AppendToFile" value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d [%t] %level %logger %file %method %line - %message%newline" />
      </layout>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    </appender>
    <root>
      <level value="ALL" />
      <appender-ref ref="FileAppender" />
    </root>
  </log4net>
  <appSettings>
    <add key="JobsLibraryAssemblyName" value="JobsLibraryTest" />
  </appSettings>
  <!--<jobs>
    <job id="111" class="JobWorker3" firstStart="none|+00.00.00 00:00"> -->
  <!-- +00.00.00 00:00 - выполнить сразу -->
  <!--
      <triggers>
        
        -->
  <!-- 
        Ключевые слова:
        year X - каждые X лет
        month X - каждые X месяцев
        week Y X - каждые X недель. Y - день недели
        day X - каждые X дней
        hour X - каждые X часов
        minute X - каждые X минут
        time X - в строго заданное время
        first-start = {сразу при запуске, по установленному времени/периоду, конкретное время, через какое-то время после запуска}
        -->
  <!--

        <add description="every=month:1; day:20; from=14.05.2014; to=16.05.2014; after=456; id=123" /> -->
  <!-- TriggerString. Можно передавать методу -->
  <!--
        
        -->
  <!-- Атрибуты: id, description, from, to, after -->
  <!--
        
        <add description="week tuesday 2; hour 3;" /> -->
  <!-- Каждый второй вторник, каждые три часа -->
  <!--
        <add description="minute 30;" /> -->
  <!-- Каждые пол часа -->
  <!--
        <add description="day 1;time 9:30" /> -->
  <!-- Каждый день в 9:30 -->
  <!--
        <add description="time 20.05.2014 9:30" /> -->
  <!-- Выполнить в определенный день в определенное время -->
  <!--
        <add description="time 20.05.2014; hour 5" /> -->
  <!-- Выполнять в определенный день каждые пять часов -->
  <!--
        <add description="month 1; day 20" /> -->
  <!-- Выполнять каждый месяц каждые 20 дней -->
  <!--
        <add description="month 2; time 20.XX.XX;" /> -->
  <!-- Выполнять 20-го числа каждые два месяца -->
  <!--

        <add description="month 1; day 20" from="14.05.2014" to="16.05.2014" /> -->
  <!-- Триггер будет выполняться только с 14 по 16 мая -->
  <!--

        <add id="456" description="time 20.05.2014 9:30" /> -->
  <!-- Выполнить в определенный день в определенное время -->
  <!--
        <add description="day: 3" after="456" /> -->
  <!-- Активировать триггер после выполнения триггера с определенным id (вып. 20.05, а потом каждые три дня). Если
        триггер периодический, то после первого выполнения -->
  <!--
      </triggers>
    </job>
  </jobs>-->
  <system.serviceModel>
    <services>
      <service name="JobManager.JobManagerService.JobManagerService" behaviorConfiguration="JobManagerServiceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8000/JobManagerService" />
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsDualHttpBinding" contract="JobManager.JobManagerService.IJobManagerService"></endpoint>
        <endpoint contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="JobManagerServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <quartz>
    <add key="quartz.jobStore.dataSource" value="default" />
    <add key="quartz.jobStore.type" value="Quartz.Impl.AdoJobStore.JobStoreTX, Quartz" />
    <add key="quartz.dataSource.default.connectionStringName" value="JobManagerDatabase" />
    <add key="quartz.dataSource.default.provider" value="SqlServer-20" />
  </quartz>
</configuration>